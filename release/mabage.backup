manage_page= Frame(main_page, height = sheight, width = swidth) 

def add_stu():
    if input_id.get()!='' and input_name.get()!='':
        data[input_id.get()]=[input_name.get(),False]
        inputFace(input_id.get())
        with open(os.path.join(os.path.dirname(os.path.abspath(__file__)),'data.bin'),'wb') as info_fi :pickle.dump(data,info_fi)
        update_list()
        tkinter.messagebox.showinfo('提示','录入完成')
    else:
        tkinter.messagebox.showerror('错误','错误，数据填写不完整')

def del_stu(): 
    if input_id.get()!='' :
        if input_id.get() in data:
            del data[input_id.get()]
            with open(os.path.join(os.path.dirname(os.path.abspath(__file__)),'data.bin'),'wb') as info_fi :pickle.dump(data,info_fi)
            print(data)
            update_list()
        else :
            tkinter.messagebox.showerror('错误','用户不存在')

def inputFace(faceid):
    manage_title.config(text='请面向摄像头开始采集人脸信息')
    playsound(sound_start_input)
    discerner.inputFace(faceid, inputFinish)

def inputFinish(text):
    manage_title.config(text=text)
    playsound(sound_input_success)
    manage_page.update()

def update_list():
    list_box.delete(0, END)
    for i in data :
        if i != '888':list_box.insert("end",'            '+i+' '*(21-len(i))+'|    '+data.get(i)[0])


face_id = StringVar()
input_id = StringVar()
input_name = StringVar()
manage_title=tk.Label(manage_page, text = '信息编辑', font = ('', round((sheight/22-8)*3/4)), fg = "black")
manage_title.place(x = 16, y = 0, width = swidth, height = sheight*12.5/100)
tk.Button(manage_page, text = '返回', command = manage_page.pack_forget, font = ('', round((sheight/30-8)*3/4))).place(x = 0, y = 0, width = 75)
tk.Button(manage_page, text = '关闭', command = close, font = ('', round((sheight/30-8)*3/4))).place(x = swidth*95/100, y = 0, width = swidth*5/100)
tk.Entry(manage_page,textvariable=face_id,font = ('', round((sheight/22-8)*3/4))).place(x = swidth*3/100, y = sheight*12.5/100, width = swidth*37/100, height = sheight*8/100)
tk.Button(manage_page, text = '更新人脸数据', font = ('', round((sheight/25-8)*3/4)), command = lambda:inputFace(face_id.get())).place(x = swidth*37/100, y = sheight*12.5/100, width = swidth*13/100, height = sheight*8/100)
tk.Label(manage_page, text = '               '+'学号'+'              '+'|    '+'姓名    ', font = ('', round((sheight/25-8)*3/4)),anchor = W).place(x = swidth*53/100, y = sheight*12.5/100, width = swidth*44/100, height = sheight*8/100)



stu_list=Frame(manage_page, width = swidth*44/100, height = sheight*56/100, bg='pink')
stu_list.place(x = swidth*53/100, y = sheight*19/100)

list_box=Listbox(stu_list,font = ('', round((sheight/25-8)*3/4)))
list_box.place(width = swidth*42/100,height = sheight*56/100)
#竖直滚动条
vbar=Scrollbar(stu_list)
vbar.place(x = swidth*42/100, width = swidth*2/100, y = sheight*0/100, heigh = sheight*56/100)

list_box.configure(yscrollcommand = vbar.set)
vbar.configure(command=list_box.yview)
tk.Label(manage_page, text = '学号', font = ('', round((sheight/22-8)*3/4))).place(x = swidth*53/100, width = swidth*5/100, y = sheight*75.5/100, height = sheight*6/100)
tk.Entry(manage_page, textvariable=input_id, font = ('', round((sheight/22-8)*3/4))).place(x = swidth*58/100, width = swidth*22/100, y = sheight*75.5/100, height = sheight*6/100)
tk.Label(manage_page,text = '姓名', font = ('', round((sheight/22-8)*3/4))).place(x = swidth*53/100, width = swidth*5/100, y = sheight*81.5/100, height = sheight*6/100)
tk.Entry(manage_page, textvariable=input_name, font = ('', round((sheight/22-8)*3/4))).place(x = swidth*58/100, width = swidth*22/100, y = sheight*81.5/100, height = sheight*6/100)
tk.Button(manage_page, text = '添加', command = add_stu, font = ('', round((sheight/25-8)*3/4))).place(x = swidth*77/100, y = sheight*75.5/100, width = swidth*10/100, height = sheight*12/100)
tk.Button(manage_page, text = '删除', command = del_stu, font = ('', round((sheight/25-8)*3/4))).place(x = swidth*87/100, y = sheight*75.5/100, width = swidth*10/100, height = sheight*12/100)

update_list()#显示信息
